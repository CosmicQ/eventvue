resource "aws_api_gateway_rest_api" "dash_note_api" {
  name        = "DashNoteAPI"
  description = "API Gateway for sending dashboard notes to EventBridge"
}

resource "aws_api_gateway_resource" "dash_note_resource" {
  rest_api_id = aws_api_gateway_rest_api.dash_note_api.id
  parent_id   = aws_api_gateway_rest_api.dash_note_api.root_resource_id
  path_part   = "dash-note"
}

resource "aws_iam_role" "api_gateway_eventbridge_role" {
  name = "APIGatewayEventBridgeRole"
  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Principal = {
          Service = "apigateway.amazonaws.com"
        }
      }
    ]
  })
}

resource "aws_iam_policy" "api_gateway_eventbridge_policy" {
  name        = "APIGatewayEventBridgePolicy"
  description = "Policy for API Gateway to put events to EventBridge"
  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "events:PutEvents"
        Effect = "Allow"
        Resource = "*" #  Consider restricting to your EventBridge bus ARN
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "api_gateway_eventbridge_attachment" {
  role_id    = aws_iam_role.api_gateway_eventbridge_role.id
  policy_arn = aws_iam_policy.api_gateway_eventbridge_policy.arn
}

resource "aws_api_gateway_method" "dash_note_post" {
  rest_api_id   = aws_api_gateway_rest_api.dash_note_api.id
  resource_id   = aws_api_gateway_resource.dash_note_resource.id
  http_method   = "POST"
  authorization = "NONE" #  Consider adding authorization!
}

resource "aws_api_gateway_integration" "dash_note_integration" {
  rest_api_id             = aws_api_gateway_rest_api.dash_note_api.id
  resource_id             = aws_api_gateway_resource.dash_note_resource.id
  http_method             = "POST"
  type                    = "AWS"
  integration_http_method = "POST" #  EventBridge expects POST
  credentials             = aws_iam_role.api_gateway_eventbridge_role.arn
  uri                     = "arn:aws:apigateway:${var.region}:events:path//events/" # Corrected URI
  request_templates = {
    "application/json" = jsonencode({
      "Source"       = "com.my-api.dash-note", #  Change this!
      "DetailType"   = "DashboardNoteCreated", #  Change this!
      "Detail"       = "$util.escapeJavaScript($input.body)"  # Pass the raw body as a JSON string
      # The escapeJavaScript is crucial to handle JSON within JSON
    })
  }
  passthrough_behavior = "WHEN_NO_MATCH" #  Important!
}

resource "aws_api_gateway_method_response" "dash_note_method_response_200" {
  rest_api_id = aws_api_gateway_rest_api.dash_note_api.id
  resource_id = aws_api_gateway_resource.dash_note_resource.id
  http_method = aws_api_gateway_method.dash_note_post.http_method
  status_code = "200"
}

resource "aws_api_gateway_integration_response" "dash_note_integration_response_200" {
  rest_api_id = aws_api_gateway_rest_api.dash_note_api.id
  resource_id = aws_api_gateway_resource.dash_note_resource.id
  http_method = aws_api_gateway_method.dash_note_post.http_method
  status_code = "200"
    response_templates = {
    "application/json" = jsonencode({ "message" = "Event sent to EventBridge" })
  }
}

resource "aws_api_gateway_deployment" "dash_note_deployment" {
  rest_api_id = aws_api_gateway_rest_api.dash_note_api.id
  stage_name  = "prod" #  Or your desired stage
  depends_on = [
    aws_api_gateway_integration_response.dash_note_integration_response_200,
  ]
}

resource "aws_api_gateway_stage" "stage" {
  rest_api_id = aws_api_gateway_rest_api.dash_note_api.id
  deployment_id = aws_api_gateway_deployment.dash_note_deployment.id
  stage_name = "prod"
  access_log_settings {
    destination_arn = aws_cloudwatch_log_group.api_gateway_logs.arn
    format = jsonencode({
      "requestId" : "$context.requestId",
      "ip" : "$context.identity.sourceIp",
      "caller" : "$context.identity.caller",
      "user" : "$context.identity.user",
      "requestTime" : "$context.requestTime",
      "httpMethod" : "$context.httpMethod",
      "resourcePath" : "$context.resourcePath",
      "status" : "$context.status",
      "responseLength" : "$context.responseLength"
    })
  }
}

resource "aws_cloudwatch_log_group" "api_gateway_logs" {
  name = "/aws/api_gateway/${aws_api_gateway_rest_api.dash_note_api.name}"
}
